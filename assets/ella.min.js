function productsToShow () { var t = localStorage.getItem("productCount"); return t ? parseInt(t) : parseInt($("#product-view option:selected").val()) } function selectedMatColor () { let t = document.querySelector("#add-selected-mat").value, e = document.querySelector(".placemat-label"); "None" === t && (e.style.backgroundColor = "#637175", e.textContent = "ADDED") } !function (t) { sessionStorage.setItem("currentPage", 1), sessionStorage.setItem("tagFilter", ""); var e = t("#products-container"), a = e.find(".product-loop"), r = a; t(".filterInput"); var n = 1, i = 1; function o (t) { var r = !1, n = "data-title"; sessionStorage.setItem("sortOrder", t), ("title" == t || "title-reverse" == t) && (n = "data-title"), ("price" == t || "price-reverse" == t) && (n = "data-price"), ("title-reverse" == t || "price-reverse" == t) && (r = !0), a.sort(function (t, e) { var a = t.getAttribute(n), i = e.getAttribute(n); return ("data-price" == n && (a = parseInt(a), i = parseInt(i)), a > i) ? r ? -1 : 1 : a < i ? r ? 1 : -1 : 0 }), a.detach().appendTo(e), u() } function l (e = !1, r = !1) { var n = e[0], i = e[1]; r || sessionStorage.removeItem("currentPage"), 0 == n.length && 0 == i.length && (e = !1, sessionStorage.removeItem("generalFilter"), sessionStorage.removeItem("tagFilter"), t("input:checked").each(function () { t(this).prop("checked", !1) })), e ? (sessionStorage.setItem("generalFilter", JSON.stringify(n)), sessionStorage.setItem("tagFilter", JSON.stringify(i)), a.each(function () { var a = t(this).children(".product-block"); n.length > 0 && i.length ? d(n, a.data("tags")) ? c(a) : s(a) : n.length > 0 ? d(n, a.data("tags")) ? ("in-stock," == e && ("in-stock," == e && 1 > a.data("inventory") ? s(a) : c(a)), "low-inventory," == e && ("low-inventory," == e && 1 > a.data("inventory") ? s(a) : c(a)), "in-stock," != e && "low-inventory," != e && c(a)) : s(a) : d(i, a.data("tags")) ? c(a) : s(a) }), t(a).not("hide")) : a.each(function () { c(t(this).children(".product-block")) }), function e (a) { var r = ""; t(a[0]).each(function (t, e) { r = r.concat(e) + "|" }), t(a[1]).each(function (t, e) { r = r.concat(e) + "|" }), allFilters = r.split("|"); for(var n = 0;n < allFilters.length;n++) { var i = document.createElement("span"); i.classList.add("singleFilter"), i.innerHTML = allFilters[n] } for(var o = document.querySelectorAll(".filterInput"), n = 0;n < allFilters.length;n++)for(var l = 0;l < o.length;l++)o[l].value == allFilters[n] && (o[l].checked = !0) }(e), u(20) } function c (t) { t.parent().addClass("filter-shown").removeClass("hide") } function s (t) { t.parent().removeClass("filter-shown").addClass("hide") } function d (t, e) { if(void 0 == e) return !1; for(var a = 0;a < t.length;a++)if(-1 != e.indexOf(t[a])) return !0; return !1 } function u (e) { var n = (r = a.filter(".filter-shown")).length; n < 1 && (n = (r = a).length), i = Math.ceil(n / e); var o = t(); if(i > 1) { var l = t('<li class="text"><a class="pagination__button" data-target-page="previous">&laquo; Prev</a></li>'), c = t('<li class="text"><a class="pagination__button" data-target-page="next">Next &raquo;</a></li>'); o = o.add(l); for(var s = 1;s <= i;s++) { var d = t('<li class="page-item"/>'); d.append('<a id="pagination-' + s + '" class="" data-target-page="' + s + '">' + s + "</a>"), o = o.add(d) } } o = o.add(c), t("#pagination-container").html(o), t(".page-total .total").empty().html(" " + i), sessionStorage.currentPage ? p(sessionStorage.currentPage, e) : p(1, e) } function p (e = n, a) { "previous" == e && (e = n - 1) < 1 && (e = 1), "next" == e && (e = parseInt(n) + 1) > i && (e = i), r.each(function (r, n) { Math.ceil((r + 1) / a) == e ? t(n).addClass("paginate-show").removeClass("paginate-hide") : t(n).removeClass("paginate-show").addClass("paginate-hide") }), t(".page-item a").removeClass("active"), t("#pagination-" + e).addClass("active"), n = e, sessionStorage.currentPage = n, t(".page-total .current").empty().html(n + " - ") } t("#product-sort").on("change", function () { o(t(this).val()) }), t("#product-view").on("change", function () { var e; e = t(this).val(), localStorage.setItem("productCount", e), u(parseInt(e)) }), t("#clearCollectionFilters").on("click", function () { l([[], []]) }), t(".sidebar-filter .filterInput").on("change", function (e) { e.preventDefault(); var a = []; t(this).data("rgb"), t(this).prop("checked") && (t(".sidebar-filter .filterInput").prop("checked", !1), t(this).prop("checked", !0)), t("input[name='tags']:checked").each(function () { a.push(t(this).val()) }), l([a, []]) }); let g = localStorage.getItem("productCount"); if(null != g) t("#product-view").trigger("change").val(g); else { let h = t("#product-view option:selected").val(); localStorage.setItem("productCount", h) } var v = !0; (sessionStorage.generalFilter || sessionStorage.tagFilter) && (l([JSON.parse(sessionStorage.getItem("generalFilter")), JSON.parse(sessionStorage.getItem("tagFilter"))], !0), v = !1), sessionStorage.sortOrder && (o(sessionStorage.sortOrder), v = !1), v && u(20), t(document).find("#pagination-container").on({ click: function (e) { p(t(e.target).data("target-page"), 20), t("body,html").animate({ scrollTop: 0 }, 600) } }, "li a") }(jQuery), setTimeout(function () { let t = document.querySelector(".btn.add-to-cart.launchtip_add_to_cart"), e = document.querySelector("span.add-to-cart__text"); null != e && t.addEventListener("click", function () { "Add this" == e.textContent && (t.style.backgroundColor = "#637175") }) }, 12e3);